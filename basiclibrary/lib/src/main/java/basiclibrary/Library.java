/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.*;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }

    public int[] roll(int numberDisplayedOnDice) {
        if (numberDisplayedOnDice == 0) {
            return null;
        }
        int[] outcome = new int[numberDisplayedOnDice];
        for (int i = 0; i < outcome.length; i++) {
            outcome[i] = rando();
        }
        return outcome;
    }

    public int rando() {
        Random rando = new Random();
        return rando.nextInt(7);
    }

    public boolean containsDuplicates(int[] arr) {
        boolean duplicate = false;
        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] == arr[j]) {
                    duplicate = true;

                }

            }
        }
        return duplicate;

    }

    public int calculatingAverages(int[] arr) {
        int averageNumber = 0;
        for (int i = 0; i < arr.length; i++) {
            averageNumber += arr[i];



        }

        return averageNumber / arr.length;
    }

    //this last feature was found on stackoverflow I need to understand if this works correctly DO NOT FORGET TO ASK ALEX OR BEN what is going on
    public int[] arrayOfArrays(int[][] matrix) {
        int average = 0;
        int lowestAverage = 2147483646;
        int thisArray = 0;
        for (int i = 0; i < matrix.length; i++){
            for (int j = 0; j < matrix[i].length; j++){
                average+= matrix[i][j];
            }
            if (average/(matrix[i].length - 1)< lowestAverage){
            lowestAverage = average/(matrix[i].length - 1);
            thisArray = i;
            }
            average=0;

        }
        return matrix[thisArray];
    }

}